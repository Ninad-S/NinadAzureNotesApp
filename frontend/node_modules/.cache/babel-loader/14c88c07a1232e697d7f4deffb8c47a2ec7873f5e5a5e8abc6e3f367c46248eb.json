{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Keeper app\\\\your-frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Login from \"./Login\";\nimport AccessDenied from \"./AccessDenied\";\nimport UpdateArea from \"./UpdateArea\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [wasValid, setWasValid] = useState(true);\n  const [canEdit, setCanEdit] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/api/notes`);\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/api/users`);\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n    fetchNotes();\n  }, []);\n  const handleLogin = (username, password) => {\n    const user = users.find(user => user.username === username && user.password === password);\n    if (user) {\n      setCurrentUser(user);\n      setIsLoggedIn(true);\n      setWasValid(true);\n    } else {\n      setIsLoggedIn(false);\n      setWasValid(false);\n    }\n  };\n  const addNote = async _ref => {\n    let {\n      title,\n      content,\n      author\n    } = _ref;\n    try {\n      await axios.post(`${API_URL}/api/notes`, {\n        title,\n        content,\n        author\n      });\n      fetchNotes();\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error adding note:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const deleteNote = async id => {\n    try {\n      await axios.delete(`${API_URL}/api/notes/${id}`);\n      fetchNotes();\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n  const changeEdit = async (id, title, content, author) => {\n    try {\n      await axios.put(`${API_URL}/api/notes/${id}`, {\n        title,\n        content,\n        author\n      });\n      setCanEdit(false); // Close the edit form\n      fetchNotes(); // Refresh notes\n    } catch (error) {\n      console.error(\"Error updating note:\", error);\n    }\n  };\n  const editNote = id => {\n    setSelectedId(id);\n    setCanEdit(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !wasValid ? /*#__PURE__*/_jsxDEV(AccessDenied, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLoggedIn(false),\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n        onAdd: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), notes.map(noteItem => /*#__PURE__*/_jsxDEV(Note, {\n        id: noteItem.id,\n        title: noteItem.title,\n        content: noteItem.content,\n        author: noteItem.author,\n        onDelete: deleteNote,\n        onEdit: editNote\n      }, noteItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)), canEdit && selectedId !== null && /*#__PURE__*/_jsxDEV(UpdateArea, {\n        note: notes.find(note => note.id === selectedId),\n        onEdit: changeEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IuGuA7YljP2Vpo2+6cU9kWawBm0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Note","CreateArea","Login","AccessDenied","UpdateArea","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","notes","setNotes","users","setUsers","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","wasValid","setWasValid","canEdit","setCanEdit","selectedId","setSelectedId","fetchNotes","response","get","data","error","console","fetchUsers","handleLogin","username","password","user","find","addNote","_ref","title","content","author","post","_error$response","message","deleteNote","id","delete","changeEdit","put","editNote","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClick","onAdd","map","noteItem","onDelete","onEdit","note","_c","$RefreshReg$"],"sources":["C:/react/Keeper app/your-frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Login from \"./Login\";\nimport AccessDenied from \"./AccessDenied\";\nimport UpdateArea from \"./UpdateArea\";\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:3000\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [wasValid, setWasValid] = useState(true);\n  const [canEdit, setCanEdit] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/api/notes`);\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/api/users`);\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    fetchNotes();\n  }, []);\n\n  const handleLogin = (username, password) => {\n    const user = users.find(\n      (user) => user.username === username && user.password === password\n    );\n    if (user) {\n      setCurrentUser(user);\n      setIsLoggedIn(true);\n      setWasValid(true);\n    } else {\n      setIsLoggedIn(false);\n      setWasValid(false);\n    }\n  };\n\n  const addNote = async ({ title, content, author }) => {\n    try {\n      await axios.post(`${API_URL}/api/notes`, { title, content, author });\n      fetchNotes();\n    } catch (error) {\n      console.error(\"Error adding note:\", error.response?.data || error.message);\n    }\n  };\n\n  const deleteNote = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/api/notes/${id}`);\n      fetchNotes();\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n\n  const changeEdit = async (id, title, content, author) => {\n    try {\n      await axios.put(`${API_URL}/api/notes/${id}`, { title, content, author });\n      setCanEdit(false); // Close the edit form\n      fetchNotes(); // Refresh notes\n    } catch (error) {\n      console.error(\"Error updating note:\", error);\n    }\n  };\n\n  const editNote = (id) => {\n    setSelectedId(id);\n    setCanEdit(true);\n  };\n\n  return (\n    <div>\n      {!wasValid ? (\n        <AccessDenied />\n      ) : !isLoggedIn ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <>\n          <Header />\n          <button onClick={() => setIsLoggedIn(false)}>LOGOUT</button>\n          <CreateArea onAdd={addNote} />\n          {notes.map((noteItem) => (\n            <Note\n              key={noteItem.id}\n              id={noteItem.id}\n              title={noteItem.title}\n              content={noteItem.content}\n              author={noteItem.author}\n              onDelete={deleteNote}\n              onEdit={editNote}\n            />\n          ))}\n          {canEdit && selectedId !== null && (\n            <UpdateArea\n              note={notes.find((note) => note.id === selectedId)}\n              onEdit={changeEdit}\n            />\n          )}\n          <Footer />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}